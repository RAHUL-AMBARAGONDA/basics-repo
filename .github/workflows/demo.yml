name: Deploy website with controlled failures

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Intentionally fail lint step
        run: exit 1 # Simulate failure
        continue-on-error: true # Don't stop the job

      - name: Print message if lint failed
        if: failure()
        run: echo "Lint step failed but continuing..."

      - name: Test code
        id: test-step
        run: exit 1 # Simulate test failure

      - name: Upload test report if tests failed
        if: steps.test-step.outcome == 'failure'
        run: echo "Tests failed! Uploading test report..."

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: |
          mkdir -p new
          echo "This is a build file" > new/output.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: new-file
          path: new

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: new-file
          path: downloaded-new

      - name: Deploy
        run: |
          echo "Deploying..."
          ls -R downloaded-new
